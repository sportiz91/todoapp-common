/* lists of colors:
primary: rgb(54, 112, 199) -> body background + button "+" right form
light: #f4f4f4 -> writting except writting of right div and forms writting
dark: #333 -> writting of right div + forms writting.
warning: rgb(99, 36, 36) -> delete-stuff hover color.
todo-header: #e4e4e4

font: https://fonts.googleapis.com/css?family=Work+Sans:300,400,700,900&display=swap
*/

@import url("https://fonts.googleapis.com/css2?family=Work+Sans:wght@300;400;700;900&display=swap");

:root {
  --primary: rgb(54, 112, 199);
  --light: #f4f4f4;
  --dark: #333;
  --warning: rgb(99, 36, 36);
  --lessdark: #e4e4e4;
}

/* Eliminating margins, paddings and box sizing for every element */
*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: "Work Sans", sans-serif;
  font-size: 1.5rem;
  font-weight: 300;
  background-color: var(--primary);
  color: var(--light);
}

/* section min-height: 90vh + footer min-height: 10vh. If section heights grows really big
footer is gonna be pushed down (cause we are determining min-height and no height) */
section {
  min-height: 80vh;
}
@media (max-width: 1366px) {
  section {
    height: fit-content;
  }
}
@media (max-width: 1024px) {
  section {
    min-height: 90vh;
  }
}

.app-container {
  display: grid;
  grid:
    "header header header header" auto
    "...... lists  tasks  ......" auto
    "...... .....  delete ......" auto / 1fr minmax(100px, 300px)
    minmax(250px, 500px) 1fr;
  row-gap: 5rem;
  /* design: section 90vh and footer 10 vh. Then, we have the app container displayed as flex, and centered (justify content and align items center). Because we have auto height 
  for rows in the grid, when we start adding tasks or lists, the app in the first moment is gonna start growing to the top (because we want the app container to be centered).
  After reaching the ceiling of the app container, if we keep adding tasks or lists, we are going to start growing to the bottom (no more center is possible because all 
  the height is covered)  */
  width: 100%;
}
@media (max-width: 1024px) {
  .app-container {
    grid:
      "..... header ....." auto
      "..... lists  ....." auto
      "..... tasks  ....." auto
      "..... delete ....." auto / 1fr 75% 1fr;

    row-gap: 3rem;
  }
}

.global-title {
  grid-area: header;
  font-size: calc(5.5vw + 2rem);
  text-align: center;
  color: rgba(0, 0, 0, 0.25);
  font-weight: 900;
  letter-spacing: 0.25rem;
  margin-top: 2rem;
}
@media (max-width: 1024px) {
  .global-title {
    font-size: 2.5rem;
  }
}

.lists {
  grid-area: lists;
  padding-top: 2rem;
}
@media (max-width: 1024px) {
  .lists {
    padding-top: 0;
  }
  .lists-title {
    font-size: 1.8rem;
  }
}

.lists-container {
  padding: 1.5rem;
  line-height: 2rem;
  font-size: 1.25rem;
  list-style-type: circle;
}
@media (max-width: 1024px) {
  .lists-container {
    font-size: 1.1rem;
  }
}

.lists-items {
  cursor: pointer;
}

.lists-items:hover {
  opacity: 0.6;
}

.active-list {
  font-weight: 700;
}

.form {
  display: flex;
  margin-left: 0.1rem;
}

.input {
  width: 200px;
  background: 0;
  border: 0;
  color: inherit;
  border-bottom: 1px solid currentColor;
  outline: none;
  padding: 0.2rem 0.2rem 0;
  margin-left: 0.3rem;
  order: 2;
  font-size: 1.1rem;
  transition: border 150ms ease-in;
}
@media (max-width: 1024px) {
  .input {
    width: 140px;
  }
}

.input:focus {
  border-bottom-width: 3px;
}

.create {
  background: 0;
  border: 0;
  font-size: 1.5rem;
  font-weight: 900;
  color: inherit;
  transition: opacity 300ms ease-in;
}

.create:hover,
.create:focus {
  opacity: 0.7;
}

.btn {
  cursor: pointer;
}

.input:focus {
  outline: none;
}

.input::placeholder {
  color: var(--dark);
  opacity: 0.3;
  transition: opacity 150ms ease-in-out;
}

.new-list-input:focus::placeholder {
  opacity: 0.2;
}
@media (max-width: 1024px) {
  .new-list-input::placeholder {
    font-size: 1rem;
  }
}

.todo-container {
  grid-area: tasks;
  background-color: var(--light);
  color: var(--dark);
  --spacer: 2rem;
}

.todo-header {
  background-color: var(--lessdark);
  padding: var(--spacer);
  display: flex;
  justify-content: space-between;
  align-items: center;
}
@media (max-width: 1024px) {
  .todo-header {
    padding: 2rem 0.8rem;
  }
}

@media (max-width: 1024px) {
  .todo-header-title {
    font-size: 1.2rem;
  }
}

.todo-header-remaining {
  font-size: 1rem;
}
@media (max-width: 1024px) {
  .todo-header-remaining {
    font-size: 0.72rem;
  }
}

.tasks-container {
  padding: var(--spacer);
}
@media (max-width: 1024px) {
  .tasks-container {
    font-size: 1.2rem;
  }
}

.task {
  position: relative;
  margin-bottom: 2rem;
}

.task::after {
  content: "";
  position: absolute;
  left: 0;
  right: 0;
  bottom: -0.75rem;
  height: 1px;
  background-color: var(--dark);
  opacity: 0.1;
}

[type="checkbox"] {
  opacity: 0;
  position: absolute;
  height: 1rem;
  width: 1rem;
  bottom: 6px;
  left: 1px;
}

.task-label {
  position: relative;
  display: inline-flex;
  align-items: center;
}

.task-custom-checkbox {
  height: 1.125rem;
  width: 1.125rem;
  display: inline-block;
  left: 0;
  margin-right: 1.25rem;
  border-radius: 50%;
  background-color: var(--light);
  border: solid 2px var(--dark);
  transform: scale(1);
  transition: transform 250ms ease-in-out;
}

.task-label:hover .task-custom-checkbox,
[type="checkbox"]:focus + label .task-custom-checkbox,
.task:hover .task-custom-checkbox {
  transform: scale(1.2);
  border-color: var(--primary);
}

.task-custom-checkbox:hover {
  cursor: pointer;
}

[type="checkbox"]:checked + label .task-custom-checkbox {
  background-color: var(--primary);
  border-color: var(--primary);
  box-shadow: inset 0 0 0 2px var(--light);
}

[type="checkbox"]:checked + label {
  opacity: 0.7;
}

.task-label::after {
  content: "";
  position: absolute;
  left: 2.4rem;
  right: 0;
  top: 50%;
  height: 2px;
  background-color: var(--dark);
  transform: scale(0);
  transform-origin: right;
  transition: transform 200ms ease-in-out;
}

/* apparently, you cannot select -> [type="checkbox"]:selected + label .task-label::after */
[type="checkbox"]:checked + .task-label::after {
  transform: scale(1);
  transform-origin: left;
}

.new-task-form {
  padding: var(--spacer);
  margin-top: -55px;
}

.new-task-form > .btn.create {
  color: var(--primary);
  margin-right: 0.3rem;
}

.new-task-input {
  font-size: 1.25rem;
  letter-spacing: 0.15rem;
  width: 300px;
  padding: 0.35rem;
}
@media (max-width: 1024px) {
  .new-task-input {
    width: 130px;
  }
}

.new-task-input::placeholder {
  opacity: 0.2;
}
@media (max-width: 1024px) {
  .new-task-input::placeholder {
    font-size: 0.9rem;
    letter-spacing: 0.05rem;
  }
}

.new-task-input:focus::placeholder {
  opacity: 0.1;
}

.delete-stuff {
  grid-area: delete;
  margin-top: -160px;
  display: flex;
  justify-content: space-evenly;
  align-items: center;
}
@media (max-width: 1024px) {
  .delete-stuff {
    margin-top: -110px;
  }
}

.delete-stuff > .btn {
  border: 0;
  background: 0;
  color: var(--light);
  margin-bottom: -50px;
  opacity: 0.7;
  font-size: 0.9rem;
  letter-spacing: 0.05rem;
  transition: color 150ms ease-in-out;
}
@media (max-width: 1024px) {
  .delete-stuff > .btn {
    font-size: 0.7rem;
  }
}

.delete-stuff > .btn:hover {
  color: var(--warning);
}

footer {
  margin-top: 5vh;
  min-height: 15vh;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 1.1rem;
  font-weight: 700;
}
@media (max-width: 1366px) {
  footer {
    height: fit-content;
    margin-top: 100px;
  }
}
@media (max-width: 1024px) {
  footer {
    min-height: 10vh;
    font-size: 0.8rem;
  }
}

footer p {
  opacity: 0.8;
}

footer a {
  text-decoration: none;
  color: var(--warning);
  transition: opacity 150ms ease-in-out;
}

footer a:hover {
  opacity: 0.5;
}
